## Voron Design VORON2 350mm 

[include mainsail.cfg]          ; Defines pause/resume/cancel routines, used in UI and KlipperScreen (@see _CLIENT_VARIABLE)
[include KAMP_Settings.cfg]     ; See https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging
[include thermistors.cfg]       ; extra configutation for specific thermistos used

# Configuration parts

[include motors.cfg]            ; XY and Z motors configuration
[include sensorless.cfg]        ; Overrides homing routines, used for sensorless homing
[include led_status.cfg]        ; Defines leds and status commands (defines macros like [_STATUS_XXX])
[include runout_sensor.cfg]     ; Configures the sensor and change routines (defines [filament_switch_sensor RunoutSensor] and [M600])

# Special macros

[include heatsoak.cfg]          ; cancellable soaking routine
[include speed.cfg]             ; big macro for testing speed irl
[include config_backup.cfg]     ; backup to Otann/voron_2_configs

# Toolheads 

; Must contain:
; - [extruder]
; - [probe]
; - [fan]
; - [heater_fan hotend_fan]
; Should contain:
; - [resonance_tester]
; - [temperature_fan canbus_mcu]
; - [temperature_sensor canbus_pcb]

[include stealthburner.cfg]     ; tried and trusted StealthBurner head, over 1300h printed

#####################################################################
#   Devices configuration
#####################################################################

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT


[mcu]
# weird, still Octopus is no available via by-id path
# serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_240019000550565843333620-if00
serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.3:1.0
restart_method: command


[printer]
kinematics: corexy
max_velocity: 400  
max_accel: 6000             # Max 6000 according to input shaper (but ZV)
max_z_velocity: 20          # Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0


#####################################################################
#   Klipper settings
#####################################################################

[idle_timeout]
timeout: 1800
gcode:
    _STATUS_IDLE
    M117 Going idle
    M84
    TURN_OFF_HEATERS
    SET_FAN_SPEED FAN=nevermore SPEED=0
    SET_FAN_SPEED FAN=exhaust SPEED=0


[exclude_object]


[gcode_arcs]
resolution: 0.1


[respond]
# what should be called for M118 command
# default_type: echo
default_prefix: tgnotify


[force_move]
enable_force_move: True

  
[gcode_macro M117]
rename_existing: M117.1
gcode:
    M117.1 {rawparams}                  ; sets status as original command
    {action_respond_info(rawparams)}    ; prints same message to console


#####################################################################
#   Input Shaping
#####################################################################

# Moved to [stealthburner.cfg] / [dragonburner.cfg]
# - [adxl345]
# - [resonance_tester]


[input_shaper]
shaper_type_x: zv
shaper_freq_x: 55.2
shaper_type_y: zv    
shaper_freq_y: 39.2


#####################################################################
#   Bed Configuration
#####################################################################

[heater_bed]
heater_pin: PA3
sensor_type: Generic 3950
sensor_pin: PF3
max_power: 0.6 ; percentage, docs say rule of thumb is 0.4 watts / cm^2
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769


[quad_gantry_level]
gantry_corners:
    -60,-10
    410,420
points:
    50,25
    50,275
    300,275
    300,25
speed: 300
retries: 10
max_adjust: 10
retry_tolerance: 0.0075
horizontal_move_z: 10


[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 310,310
fade_start: 0.6
fade_end: 10.0
probe_count: 7,7 ; Values should be odd, so one point is directly at bed center
algorithm: bicubic


#####################################################################
#   Sensors and fans
#####################################################################

# Moved to [stealthburner.cfg]
# - [fan]
# - [heater_fan hotend_fan]
# - [temperature_fan canbus_mcu]
# - [temperature_sensor canbus_pcb]

[temperature_fan housing_fan_pi]
pin: PD12
sensor_type: temperature_host
min_temp: 0.0
max_temp: 75.0
target_temp: 60.0
control: watermark
max_speed: 0.6
min_speed: 0.2

# @see housing_fan_pi
# [temperature_sensor rpi]
# sensor_type: temperature_host
# min_temp: 10
# max_temp: 100


[fan_generic exhaust]
## Back panel exhaust - FAN4 on Octopus
pin: PD13


[fan_generic nevermore]
; Nevermore - FAN5 on Octopus, PD14
; The Filter - HE0 on Octopus, PA2
pin: PA2


[temperature_sensor mcu]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


[temperature_sensor chamber]
# Thermistor from Ender 3v2 hotend
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF4
min_temp: 0
max_temp: 100

#####################################################################
#   Macros
#####################################################################

[gcode_macro _HOMED]
description: Ensures that head is homes
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}


[gcode_macro FRONT]
description: Moves to the front, quite high
gcode:
    _HOMED
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_minimum.y + 20} F15000
    G0 Z150 F500


[gcode_macro FORCE_GANTRY_UP]
description: Forcibly move gantry up and then release motors
gcode:
  SET_KINEMATIC_POSITION Z=0
  G0 Z10 F500
  M84 # disable motors afterwards


[gcode_macro _CLEAN_NOZZLE]
gcode:
  M117 Cleaning the nozzle
  _HOMED
  _BUCKET
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=235
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM=235
  G92 E0                ; zero the extruder
  G1 E25.0 F500         ; extract filament
  G1 E-5.0 F2000        ; retract a bit
  _SCRUB_NOZZLE
  G1 E-5.0 F2000        ; retract a bit
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=185
  TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=185
  _SCRUB_NOZZLE
  M117 Cooldown to probing temps
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
  TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=150
  M117 Nozzle is clean


[gcode_macro PRINT_START]
gcode:
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_heatsoak = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_heatsoak = printer.toolhead.axis_maximum.y|float / 2 %}
  {% set z_heatsoak = 70 %}
  
  # If there is a heatsoak going, cancel it so it won't cause anything unexpected later
  DISABLE_HEAT_SOAK
  
  # Even though there is a heatsoak routine, save some time and start heating the bed early
  M117 Preparing for the print, preheating bed to {target_bed}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={target_bed}
  
  # Base homing to navigate around
  M117 Pre-homing all axes
  G28                             ; Full home (XYZ)
  G90                             ; Absolut position
  _STATUS_PREPARING
  
  _CLEAN_NOZZLE                   ; Clean nozzle before QGL and Bed Mesh
  
  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if target_bed > 90 %}
      M117 Heatsoaking the chamber to {target_chamber}c before QGL and bed meshing
      SET_FAN_SPEED FAN=nevermore SPEED=1                 ; Turns on nevermore to circulate air
      G0 X{x_heatsoak} Y{y_heatsoak} F5000                ; Goes to center of the bed
      G0 Z{z_heatsoak} F500
      M106 S255                                           ; Turns on the Part-fan to circulate air
      _STATUS_HEATSOAKING
      M190 S{target_bed}                                  ; Sets the target temp for the bed
      TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber} # Waits for chamber to reach desired temp
      M117 Chamber reached {target_chamber}c
  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
      M117 Target bed temp is lower 90c ({target_bed}c), just heating up bed for 5 min to let it take shape
      G1 X{x_heatsoak} Y{y_heatsoak} Z15 F6000            ; Goes to center of the bed to move air
      _STATUS_HEATSOAKING
      M190 S{target_bed}                                  ; Sets the target temp for the bed
      G4 S300                                             ; Waits 5 min for the bedtemp to stabilize
  {% endif %}
  
  ; Precise homing for printing
  BED_MESH_CLEAR
  M117 Re-homing all axes
  G90
  G28
  _STATUS_PREPARING
  M117 Quad Gantry Level
  QUAD_GANTRY_LEVEL
  G28 Z
  M117 Bed Mesh Calibration
  BED_MESH_CALIBRATE
  G28 Z
  
  M117 Waiting for printing temperatures (bed: {target_bed}c, Extruder: {target_extruder}c)
  
  # Set final temperatures
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={target_bed}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={target_extruder}
  # Wait for temperatures
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={target_bed}
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={target_extruder}

  G92 E0                ; zero the extruder
  G1 E10.0 F500         ; that was pulled dufing _CLEAN_NOZZLE
  G90                   ; switch to absolute coordinates before purging and printing 

  M117 Starting the print
  M118 Starting the print
  _STATUS_PRINTING

  M117 Purging filament
  VORON_PURGE



[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 20, th.axis_maximum.z]|min %}
    # get bed temp to determine cooldown routine
    {% set bed_temp = printer.heater_bed.temperature %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                                        ; wait for buffer to clear
    G92 E0                                      ; zero the extruder
    G1 E-5.0 F1800                              ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                         ; absolute positioning
    G0 X{x_safe} Y{y_safe} F20000               ; move nozzle to remove stringing
    G0 Z{z_safe} F500
    _BUCKET_XY                                  ; park nozzle at the bucket

    M107                                        ; turn off fan
    M84                                         ; disengage motors early to disable electronics fan
    {% if bed_temp > 90 %}
        _STATUS_COOLDOWN
        SET_FAN_SPEED FAN=nevermore SPEED=0     ; stop air filtering
        SET_FAN_SPEED FAN=exhaust SPEED=1   ; start sucking out hot air with back fan
        SET_IDLE_TIMEOUT TIMEOUT=1800           ; and wait for an hour until idle routine shuts it off
    {% endif %}

    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    M117 Print completed                        ; Set status
    M118 Print completed                        ; Notify on telegram


[gcode_macro COOLDOWN]
description: "The opposite of heatsoak routine"
gcode:
    TURN_OFF_HEATERS
    SET_FAN_SPEED FAN=nevermore SPEED=0
    SET_FAN_SPEED FAN=exhaust SPEED=0
    SET_IDLE_TIMEOUT TIMEOUT=1800


[gcode_macro _BUCKET_XY]
description: Moves nozzle above the purge bucket
gcode:
    _HOMED
    G0 X315 Y359 F15000

[gcode_macro _BUCKET]
description: Moves nozzle above the purge bucket
gcode:
    _HOMED
    _BUCKET_XY
    G0 Z30 F500

[gcode_macro _SCRUB_NOZZLE]
variable_start_x: 300
variable_start_y: 353
variable_start_z: 0.5
variable_wipe_dist: -40
variable_wipe_qty: 2
variable_wipe_spd: 150
variable_raise_distance: 30
gcode:
    _HOMED                                          ; ensure homing    
    G90                                             ; absolute positioning
    ## Move nozzle to start position
    G1 X{start_x} Y{start_y} F6000
    G1 Z{start_z} F500

    ## Wipe nozzle
    {% for wipes in range(1, (wipe_qty + 1)) %}
        G1 X{start_x + wipe_dist} F{wipe_spd * 60}
        G1 X{start_x} F{wipe_spd * 60}
    {% endfor %}

    ## Raise nozzle
    G1 Z{raise_distance} F500


[gcode_macro UNLOAD_FILAMENT]
description: Heats up, purges, retracts and then moves to the FRONT (absolute positioned!)
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=unload_state
    _HOMED
    _BUCKET
    ; Heat up extruder to roughtly match-all temperature
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=235
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM=235
    G91
    G92 E0
    G1 E25 F{speed}                         ; purge
    G1 E-200 F{max_velocity}                ; fast-unload
    _SCRUB_NOZZLE
    RESTORE_GCODE_STATE NAME=unload_state
    FRONT                                   ; present to the user for filament change
    M118 Ready for unloading filament

[gcode_macro LOAD_FILAMENT]
description: Assumes the front position and that user manually inserted the filament to the extruder gears
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=load_state
    _HOMED
    ; Heat up extruder to roughtly match-all temperature
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=235
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM=235
    G91
    G92 E0
    G1 E50 F{max_velocity}                  ; fast-load
    G1 E100 F{speed}                        ; purge
    G1 E100 F{speed}                        ; purge
    G1 E-10.0 F2000                          ; retract a bit to cut off
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro _CLIENT_VARIABLE]
; configures variables needed in fluidd.cfg
variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 175   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 20    ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 175   ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 300   ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False]
gcode:
  M117 This does nothing but store variables

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 40.129
#*# pid_ki = 1.262
#*# pid_kd = 319.022
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 36.015
#*# pid_ki = 17.150
#*# pid_kd = 18.908
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.028750, -0.005000, 0.026250
#*# 	0.030000, 0.025000, 0.028750
#*# 	0.027500, -0.008750, 0.025000
#*# 	0.035000, 0.001250, 0.002500
#*# x_count = 3
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 131.71
#*# max_x = 215.73
#*# min_y = 120.65
#*# max_y = 233.6
#*#
#*# [probe]
#*# z_offset = -0.475
